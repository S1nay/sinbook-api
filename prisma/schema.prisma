// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  nickName      String         @map("nick_name")
  avatarPath    String?
  name          String
  secondName    String         @map("second_name")
  middleName    String         @map("middle_name")
  email         String         @unique
  passwordHash  String
  posts         Post[]
  comments      Comment[]
  city          String         @default("")
  birthDate     DateTime?
  gender        Gender
  followers     User[]         @relation("followers")
  followersOf   User[]         @relation("followers")
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  isDeleted     Boolean        @default(false) @map("is_deleted")
  messages      Message[]
  conversations Conversation[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  views     Int       @default(0)
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @map("user_id")
  comments  Comment[]
  likes     Int       @default(0)
  images    String[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}

model Comment {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Conversation {
  id                  Int       @id @default(autoincrement())
  members             User[]
  unreadMessagesCount Int       @default(0) @map("unread_messages_count")
  lastMessage         String    @map("last_message")
  message             Message[]
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @updatedAt @map("updated_at")
}

model Message {
  id             Int          @id @default(autoincrement())
  message        String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  sender         User         @relation(fields: [userId], references: [id])
  userId         Int
}

enum Gender {
  FEMALE
  MALE
}
